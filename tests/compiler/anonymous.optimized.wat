(module
 (type $III (func (param i64 i64) (result i64)))
 (type $II (func (param i64) (result i64)))
 (type $v (func))
 (import "env" "abort" (func $~lib/env/abort))
 (global $~lib/allocator/arena/startOffset (mut i32) (i32.const 0))
 (global $~lib/allocator/arena/offset (mut i32) (i32.const 0))
 (global $~argc (mut i32) (i32.const 0))
 (table 1 1 anyfunc)
 (elem (i32.const 0) $anonymous/some_func~anonymous|0)
 (memory $0 1)
 (data (i32.const 8) "\0c\00\00\00a\00n\00o\00n\00y\00m\00o\00u\00s\00.\00t\00s")
 (export "memory" (memory $0))
 (export "table" (table $0))
 (start $start)
 (func $anonymous/some_func~anonymous|0 (; 1 ;) (; has Stack IR ;) (type $II) (param $0 i64) (result i64)
  (get_local $0)
 )
 (func $anonymous/some_func (; 2 ;) (; has Stack IR ;) (type $III) (param $0 i64) (param $1 i64) (result i64)
  (set_global $~argc
   (i32.const 1)
  )
  (i64.add
   (call_indirect (type $II)
    (get_local $1)
    (i32.const 0)
   )
   (get_local $0)
  )
 )
 (func $start (; 3 ;) (; has Stack IR ;) (type $v)
  (set_global $~lib/allocator/arena/startOffset
   (i32.const 40)
  )
  (set_global $~lib/allocator/arena/offset
   (get_global $~lib/allocator/arena/startOffset)
  )
  (if
   (i64.ne
    (call $anonymous/some_func
     (i64.const 12)
     (i64.const 12)
    )
    (i64.const 13)
   )
   (block
    (call $~lib/env/abort)
    (unreachable)
   )
  )
 )
)
